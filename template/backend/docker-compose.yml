networks:
  ambev-network:
    driver: bridge

services:
  ambev.developerevaluation.webapi:
    container_name: ambev_developer_evaluation_webapi
    image: ${DOCKER_REGISTRY-}ambevdeveloperevaluationwebapi
    build:
      context: .
      dockerfile: src/Ambev.DeveloperEvaluation.WebApi/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
    ports:
      - "8082:8080"
    depends_on:
      ambev.developerevaluation.database:
        condition: service_healthy
      ambev.developerevaluation.nosql:
        condition: service_healthy
      ambev.developerevaluation.cache:
        condition: service_healthy
    networks:
      - ambev-network

  ambev.developerevaluation.database:
    container_name: ambev_developer_evaluation_database
    image: postgres:13
    environment:
      POSTGRES_DB: developer_evaluation
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: ev@luAt10n
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U developer -d developer_evaluation"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"
    volumes:
      - ./seed-data:/docker-entrypoint-initdb.d
    networks:
      - ambev-network

  ambev.developerevaluation.nosql:
    container_name: ambev_developer_evaluation_nosql
    image: mongo:8.0
    environment:
      MONGO_INITDB_ROOT_USERNAME: developer
      MONGO_INITDB_ROOT_PASSWORD: ev@luAt10n
    healthcheck:
      test: ["CMD-SHELL", "mongosh --eval 'db.runCommand({ ping: 1 })'"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "27017:27017"
    networks:
      - ambev-network

  ambev.developerevaluation.cache:
    container_name: ambev_developer_evaluation_cache
    image: redis:7.4.1-alpine
    command: redis-server --requirepass ev@luAt10n
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ev@luAt10n ping"]
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - "6379:6379"
    networks:
      - ambev-network
